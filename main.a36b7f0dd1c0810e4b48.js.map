{"version":3,"sources":["webpack:///./index.js"],"names":["selector","targetDate","this","Date","days","document","querySelector","hours","minutes","seconds","labels","querySelectorAll","startPage","deltaTime","now","time","getTimeComponents","updateClockFace","start","endTime","setInterval","currentTime","pad","value","String","padStart","day","Math","floor","hour","minute","second","textContent"],"mappings":"6jCA0Dc,I,WAvDZ,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKD,WAAa,IAAIE,KAAKF,GAE3BC,KAAKE,KAAOC,SAASC,cAAkBN,EAA3B,8BACZE,KAAKK,MAAQF,SAASC,cAAkBN,EAA3B,+BACbE,KAAKM,QAAUH,SAASC,cAAkBN,EAA3B,8BACfE,KAAKO,QAAUJ,SAASC,cAAiBN,EAA1B,8BACfE,KAAKQ,OAASL,SAASM,iBAAoBX,EAA7B,W,2BAEhBY,UAAA,WACI,IAGMC,EAHUX,KAAKD,WAEDE,KAAKW,MAEnBC,EAAOb,KAAKc,kBAAkBH,GACpCX,KAAKe,gBAAgBF,I,EAKzBG,MAAA,WAAQ,WACAC,EAAUjB,KAAKD,WACrBC,KAAKU,YAELQ,aAAY,WACV,IAAMC,EAAclB,KAAKW,MACnBD,EAAYM,EAAUE,EACtBN,EAAO,EAAKC,kBAAkBH,GACpC,EAAKI,gBAAgBF,KACpB,M,EAELO,IAAA,SAAIC,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,M,EAEnCT,kBAAA,SAAkBD,GAOhB,MAAO,CAAEW,IANGxB,KAAKoB,IAAIK,KAAKC,MAAMb,EAAO,QAMzBc,KAJZ3B,KAAKoB,IAAIK,KAAKC,MAAOb,EAAO,MAAR,OAIFe,OAHL5B,KAAKoB,IAAIK,KAAKC,MAAOb,EAAO,KAAR,MAGPgB,OAFb7B,KAAKoB,IAAIK,KAAKC,MAAOb,EAAO,IAAe,Q,EAK5DE,gBAAA,YACI,IAD2C,IAC3C,EADcS,EAA6B,EAA7BA,IAAKG,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjC,IAAoB7B,KAAKQ,UAAzB,aAAiC,SAC/BsB,YAAc,GAElB9B,KAAKE,KAAK4B,YAAiBN,EAA3B,KACAxB,KAAKK,MAAMyB,YAAiBH,EAA5B,KACA3B,KAAKM,QAAQwB,YAAiBF,EAA9B,KACA5B,KAAKO,QAAQuB,YAAb,GAA8BD,G,KAIpB,CAAmB,CAC/B/B,SAAU,WACVC,WAAY,eAGRiB,U","file":"main.a36b7f0dd1c0810e4b48.js","sourcesContent":["import './styles.css';\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = new Date(targetDate);\n\n    this.days = document.querySelector( `${selector} .value[data-value=\"days\"]`);\n    this.hours = document.querySelector( `${selector} .value[data-value=\"hours\"]`);\n    this.minutes = document.querySelector( `${selector} .value[data-value=\"mins\"]`);\n    this.seconds = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\n    this.labels = document.querySelectorAll(`${selector} .label`);\n  }\n  startPage() {\n      const endTime = this.targetDate;\n\n      const currentTime = Date.now();\n      const deltaTime = endTime - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n      this.updateClockFace(time);\n    // const time = this.getTimeComponents(0);\n    // this.updateClockFace(time);\n  }\n\n  start() {\n    const endTime = this.targetDate;\n    this.startPage();\n\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = endTime - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n      this.updateClockFace(time);\n    }, 1000);\n  }\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  getTimeComponents(time) {\n    const day = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hour =\n      this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const minute = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const second = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { day, hour, minute, second };\n  }\n\n  updateClockFace({ day, hour, minute, second }) {\n      for (const label of this.labels) {\n  label.textContent = \"\";\n  }\n    this.days.textContent = `${day} :`;\n    this.hours.textContent = `${hour} :`;\n    this.minutes.textContent = `${minute} :`;\n    this.seconds.textContent = `${second}`;\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: '1 Jan 2021',\n});\n\ntimer.start();"],"sourceRoot":""}